name: Build and Publish rsp.bot Image
on:
  release:
    types: [created]
  push:
    paths-ignore:
      - '**.md'
      - web
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  generate-database:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: "1.23"
    - run: go install github.com/pressly/goose/v3/cmd/goose@latest
    - run: goose -dir ./db/sql/migrations up
      env:
        GOOSE_DRIVER: 'sqlite3'
        GOOSE_DBSTRING: './tmbg.db'
    - uses: actions/upload-artifact@v4
      with:
        name: tmbgdb
        path: tmbg.db
  build-and-publish-image:
    runs-on: ubuntu-latest
    needs: generate-database
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write 
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: tmbgdb
      - name: Setup Docker
        uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
            
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to container registry
        if: github.event_name != 'pull_request' && github.event_name != 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.REGISTRY }}

      - name: Build Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{  github.event_name != 'pull_request' && github.event_name != 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate attestation
        uses: actions/attest-build-provenance@v1
        if: github.event_name != 'pull_request' && github.event_name != 'push'
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
